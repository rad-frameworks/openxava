<?xml version="1.0"?>

<!-- To create a new OpenXava project: 1. Create a new Java Project using Eclipse. 2. With Eclipse: Right mouse button on this file > Run As > Ant 3. Eclipse will ask you the project name: use the name of the Java project created in step 1. -->

<project name="CreateNewProject" default="createNewProject" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>

	<input addproperty="project" message="What is your project name?"/>
	<property name="datasource" value="${project}DS"/>
	<!-- If you change this revise createAppLauncher of build.xml -->
	<property name="database" value="${project}DB"/>
	<!-- If you change this revise createAppLauncher of build.xml -->

	<target name="definePackageAndJavaClass">
		<script language="javascript">
			var javaclass = project.getProperty("project").replace(/ /g, '').replace(/-/g, '');
			project.setProperty("javaclass", javaclass);
			project.setProperty("package", javaclass.toLowerCase());
		</script>
	</target>

	<target name="createNewProject" depends="definePackageAndJavaClass, antcontrib, validateDatabaseDriver">
		<mkdir dir="../${project}"/>
		<copy todir="../${project}" overwrite="true">
			<fileset dir="project-templates/en"/>
			<filterset>
				<filter token="project" value="${project}"/>
				<filter token="javaclass" value="${javaclass}"/>
				<filter token="package" value="${package}"/>
				<filter token="datasource" value="${datasource}"/>
				<filter token="database" value="${database}"/>
				<filter token="schema" value="${javaclass}"/>
			</filterset>
		</copy>
		<move file="../${project}/.project.template" tofile="../${project}/.project"/>
		<move file="../${project}/xava/application.xml.template" tofile="../${project}/xava/application.xml"/>
		<move file="../${project}/xava/controllers.xml.template" tofile="../${project}/xava/controllers.xml"/>
		<move file="../${project}/i18n/labels_en.properties.template" tofile="../${project}/i18n/${project}-labels_en.properties"/>
		<move file="../${project}/i18n/messages_en.properties.template" tofile="../${project}/i18n/${project}-messages_en.properties"/>
		<move file="../${project}/src/_run/AppLauncher.java" tofile="../${project}/src/_run/_Run_${javaclass}.java"/>
		<move file="../${project}/src/com/yourcompany/yourapp/model/YourFirstEntity.java" tofile="../${project}/src/com/yourcompany/${package}/model/YourFirstEntity.java"/>
		<delete dir="../${project}/src/com/yourcompany/yourapp" failonerror="false"/>
		<delete file="../${project}/data/data.txt"/>
		<delete dir="../${project}/bin" failonerror="false"/>
		<ant antfile="build.xml" target="buildOpenXava"/>
		<ant antfile="build.xml" target="updateOX"/>
		<if>
		     <equals arg1="${dbEngine}" arg2="mysql" />
		     <then>

							 <echo message="customizing openxava..."/>
							 <echo message="setting database driver"/>
							 <replaceregexp file="../${project}/build.xml" match="../OpenXava/lib/hsqldb.jar" replace="../OpenXava/lib/mysql-connector-java-8.0.28.jar"/>

							 <echo message="setting persistence.unit for update schema"/>
							 <replaceregexp file="../${project}/build.xml" match="value=&quot;junit&quot;" replace="value=&quot;update&quot;"/>

							 <echo message="junit driver"/>
							 <copy file="lib/hsqldb.jar" tofile="../${project}/web/WEB-INF/lib/hsqldb.jar"/>
							 <copy file="lib/mysql-connector-java-8.0.28.jar" tofile="../${project}/web/WEB-INF/lib/mysql-connector-java-8.0.28.jar"/>
							 <echo message="change to modern database strategy "/>
							 <delete file="../${project}/persistence/GalleryImage.hbm.xml" />
							 <delete file="../${project}/persistence/hibernate.cfg.xml" />
							 <delete file="../${project}/persistence/META-INF/persistence.xml" />

							 <echo message="setting database parameters in persistence.xml"/>
							 <copy file="project-templates/en-one-click/persistence-mysql.xml" tofile="../${project}/persistence/META-INF/persistence.xml"/>
							 <replaceregexp file="../${project}/persistence/META-INF/persistence.xml" match="@database_host@" replace="${dbHost}" flags="g" />
							 <replaceregexp file="../${project}/persistence/META-INF/persistence.xml" match="@database_port@" replace="${dbPort}" flags="g" />
							 <replaceregexp file="../${project}/persistence/META-INF/persistence.xml" match="@database_user@" replace="${dbUser}" flags="g" />
							 <replaceregexp file="../${project}/persistence/META-INF/persistence.xml" match="@database_password@" replace="${dbPassword}" flags="g" />
							 <replaceregexp file="../${project}/persistence/META-INF/persistence.xml" match="@database_name@" replace="${dbName}" flags="g" />

							 <echo message="setting database parameters in hibernate.cfg.xml"/>
							 <copy file="project-templates/en-one-click/hibernate.cfg-mysql.xml" tofile="../${project}/persistence/hibernate.cfg.xml"/>
							 <replaceregexp file="../${project}/persistence/hibernate.cfg.xml" match="@database_host@" replace="${dbHost}" flags="g" />
							 <replaceregexp file="../${project}/persistence/hibernate.cfg.xml" match="@database_port@" replace="${dbPort}" flags="g" />
							 <replaceregexp file="../${project}/persistence/hibernate.cfg.xml" match="@database_user@" replace="${dbUser}" flags="g" />
							 <replaceregexp file="../${project}/persistence/hibernate.cfg.xml" match="@database_password@" replace="${dbPassword}" flags="g" />
							 <replaceregexp file="../${project}/persistence/hibernate.cfg.xml" match="@database_name@" replace="${dbName}" flags="g" />

							 <echo message="setting revenge for tables to java"/>
							 <copy file="hbm2java/mvn/pom.xml" tofile="../${project}/hbm2java/pom.xml"/>
							 <copy file="hbm2java/mvn/src/main/resources/hibernate.cfg.xml" tofile="../${project}/hbm2java/src/main/resources/hibernate.cfg.xml"/>
							 <copy file="hbm2java/mvn/src/main/resources/hibernate.reveng.xml" tofile="../${project}/hbm2java/src/main/resources/hibernate.reveng.xml"/>
							 <replaceregexp file="../${project}/hbm2java/pom.xml" match="@destdir@" replace="../src" flags="g" />
							 <replaceregexp file="../${project}/hbm2java/pom.xml" match="@packagename@" replace="com.yourcompany.${project}.model" flags="g" />
							 <replaceregexp file="../${project}/hbm2java/src/main/resources/hibernate.cfg.xml" match="@database_host@" replace="${dbHost}" flags="g" />
							 <replaceregexp file="../${project}/hbm2java/src/main/resources/hibernate.cfg.xml" match="@database_port@" replace="${dbPort}" flags="g" />
							 <replaceregexp file="../${project}/hbm2java/src/main/resources/hibernate.cfg.xml" match="@database_user@" replace="${dbUser}" flags="g" />
							 <replaceregexp file="../${project}/hbm2java/src/main/resources/hibernate.cfg.xml" match="@database_password@" replace="${dbPassword}" flags="g" />
							 <replaceregexp file="../${project}/hbm2java/src/main/resources/hibernate.cfg.xml" match="@database_name@" replace="${dbName}" flags="g" />
							 <replaceregexp file="../${project}/hbm2java/src/main/resources/hibernate.reveng.xml" match="@database_name@" replace="${dbName}" flags="g" />

							 <echo message="build enhancer"/>
							 <loadfile property="additionalBuildString"  srcFile="project-templates/en-one-click/additional-build.xml"/>
							 <replaceregexp file="../${project}/build.xml" match="&#60;/project&#62;" replace="${additionalBuildString}"/>

							 <echo message="docker"/>
							 <copy file="project-templates/en-one-click/Dockerfile" tofile="../${project}/Dockerfile"/>
							 <copy file="project-templates/en-one-click/entrypoint.sh" tofile="../${project}/entrypoint.sh"/>
							 <copy file="project-templates/en-one-click/.dockerignore" tofile="../${project}/.dockerignore"/>
							 <replaceregexp file="../${project}/Dockerfile" match="@project@" replace="${project}" flags="g" />
							 <replaceregexp file="../${project}/.dockerignore" match="@project@" replace="${project}" flags="g" />
		     </then>
		 </if>
	</target>

	<input addproperty="dbEngine" message="What is your database engine?" defaultvalue="mysql"/>
	<input addproperty="dbHost" message="What is your database host?" defaultvalue="192.168.0.22"/>
	<input addproperty="dbPort" message="What is your database port?" defaultvalue="3306"/>
	<input addproperty="dbName" message="What is your database name?" defaultvalue="openxava"/>
	<input addproperty="dbUser" message="What is your database user?" defaultvalue="root"/>
	<input addproperty="dbPassword" message="What is your database password?" defaultvalue="secret"/>

	<target name="check-antcontrib">
		<available file="lib/ant-contrib-1.0b3.jar" property="ant-contrib.exist"/>
	</target>

	<target name="download-antcontrib" depends="check-antcontrib" unless="ant-contrib.exist">
		<echo message="ant-contrib.exist=${ant-contrib.exist}"/>
		<get dest="lib">
			<url url="https://repo1.maven.org/maven2/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>
		</get>
	</target>

	<target name="antcontrib" depends="check-antcontrib, download-antcontrib">
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="lib/ant-contrib-1.0b3.jar"/>
			</classpath>
		</taskdef>
	</target>

	<target name="check-mysql">
		<available file="lib/mysql-connector-java-8.0.28.jar" property="mysql.exist"/>
	</target>

	<target name="mysql" depends="check-mysql" unless="mysql.exist">
		<echo message="antmysql.exist=${mysql.exist}"/>
		<get dest="lib">
			<url url="https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar"/>
		</get>
	</target>

	<target name="validateDatabaseDriver" depends="mysql">
	</target>

</project>
